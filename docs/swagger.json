{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/account/login": {
            "post": {
                "description": "User login action  with resp.ActLogin returned",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience - Account Module"
                ],
                "summary": "User login with mail and password",
                "parameters": [
                    {
                        "description": "ActLogin",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.ActLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.ActLogin"
                        }
                    }
                }
            }
        },
        "/account/register": {
            "post": {
                "description": "Provide mail,password and invite code to register as a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audience - Account Module"
                ],
                "summary": "User register as an account through this api",
                "parameters": [
                    {
                        "description": "ActRegister",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/req.ActRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.ActRegister"
                        }
                    }
                }
            }
        },
        "/captcha/check": {
            "get": {
                "description": "This interface checks the captcha code (called 'cc')",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Utilities-Captcha Module"
                ],
                "summary": "Check the captchaCode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the id of the catpcha",
                        "name": "ci",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the letters on the captcha image, case insensitive",
                        "name": "cc",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.CheckCaptcha"
                        }
                    }
                }
            }
        },
        "/captcha/get": {
            "get": {
                "description": "This interface returns an image data with the given parameters, the size of the request should be considered, can NOT be too high or too low.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Utilities-Captcha Module"
                ],
                "summary": "Get a captcha image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "the width of the image, default value is 100, max value should no more than 500. unit:px",
                        "name": "w",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "the heigh of the image, default value is 30, max value should no more than 100. unit:px",
                        "name": "h",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "the length of the letters shown on the image, default value is 4, it should be in the zone of [4,8]",
                        "name": "l",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.CaptchaGet"
                        }
                    }
                }
            }
        },
        "/qrcode/gen": {
            "get": {
                "description": "Generates a QRCode image with the given text",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Utilities-QRCode Module"
                ],
                "summary": "QRCode generator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the length of the square holding the QRCode image",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the text of the QRCode image. if it is a http-url, it should be encoded with 'url-encode'",
                        "name": "text",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resp.QRCodeImg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "req.ActLogin": {
            "type": "object",
            "required": [
                "mail",
                "password"
            ],
            "properties": {
                "mail": {
                    "description": "E-Mail address [required]",
                    "type": "string"
                },
                "password": {
                    "description": "Password, for safety reason,the request should mix this parameter with encryption,such as MD5 and SHA256. [required]",
                    "type": "string"
                }
            }
        },
        "req.ActRegister": {
            "type": "object",
            "required": [
                "inviteCode",
                "mail",
                "password"
            ],
            "properties": {
                "inviteCode": {
                    "description": "invite code [required]",
                    "type": "string"
                },
                "mail": {
                    "description": "E-Mail address [required]",
                    "type": "string"
                },
                "password": {
                    "description": "Password, for safety reason,the request should mix this parameter with encryption,such as MD5 and SHA256. [required]",
                    "type": "string"
                }
            }
        },
        "resp.ActLogin": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The ID of the account",
                    "type": "integer"
                }
            }
        },
        "resp.ActRegister": {
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "The ID of the account",
                    "type": "integer"
                }
            }
        },
        "resp.CaptchaGet": {
            "type": "object",
            "properties": {
                "captcha": {
                    "description": "The captcha image of request, in BASE64 format",
                    "type": "string"
                },
                "nonce": {
                    "description": "The nonce key of the captcha",
                    "type": "string"
                }
            }
        },
        "resp.CheckCaptcha": {
            "type": "object",
            "properties": {
                "captchaNonce": {
                    "description": "The nonce value of the captcha check response",
                    "type": "string"
                },
                "captchaNonceKey": {
                    "description": "The nonce key of the captcha check response",
                    "type": "string"
                }
            }
        },
        "resp.QRCodeImg": {
            "type": "object",
            "properties": {
                "image": {
                    "description": "The QRCode data, in BASE64 format",
                    "type": "string"
                }
            }
        }
    }
}